#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
	patch $pdir -f --no-backup-if-mismatch -p1 < $0
	echo '2.05' > _distribution
	echo '0' > _patchlevel
	autoconf
	rm -f _distribution _patchlevel
	;;
    -unpatch)
	patch $pdir -f --no-backup-if-mismatch -R -p1 < $0
	rm -f configure _distribution _patchlevel
	;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# DP: use the system random functions

--- bash-2.05-old/configure.in	Mon Nov  6 14:21:35 2000
+++ bash-2.05/configure.in	Sun Nov 26 20:42:06 2000
@@ -479,6 +479,9 @@
 		siginterrupt memmove ttyname gethostbyname getservbyname \
 		inet_aton strpbrk setvbuf pathconf)
 
+dnl checks for random functions
+AC_CHECK_FUNCS(random srandom)
+
 dnl checks for locale functions
 AC_CHECK_HEADERS(libintl.h)
 AC_CHECK_FUNCS(gettext textdomain bindtextdomain)
--- bash-2.05-old/config.h.in	Mon Oct  2 15:44:22 2000
+++ bash-2.05/config.h.in	Sun Nov 26 21:51:18 2000
@@ -462,6 +462,9 @@
 /* Define if you have the putenv function.  */
 #undef HAVE_PUTENV
 
+/* Define if you have the random function.  */
+#undef HAVE_RANDOM
+
 /* Define if you have the readlink function. */
 #undef HAVE_READLINK
 
@@ -524,6 +527,9 @@
 
 /* Define if you have the strsignal function or macro. */
 #undef HAVE_STRSIGNAL
+
+/* Define if you have the srandom function.  */
+#undef HAVE_SRANDOM
 
 /* Define if you have the sysconf function. */
 #undef HAVE_SYSCONF
--- bash-2.05-old/variables.c	Wed Nov  8 18:48:13 2000
+++ bash-2.05a/variables.c	Wed Nov 14 23:26:01 2001
@@ -1082,16 +1082,21 @@
 static unsigned long rseed = 1;
 static int last_random_value;
 
-/* A linear congruential random number generator based on the example
-   on in the ANSI C standard.  This one isn't very good, but a more
-   complicated one is overkill. */
+/* Use the random number genrator provided by the standard C library,
+   else use a linear congruential random number generator based on the
+   ANSI C standard.  This one isn't very good (the values are alternately
+   odd and even, for example), but a more complicated one is overkill. */
 
 /* Returns a pseudo-random number between 0 and 32767. */
 static int
 brand ()
 {
+#if defined(HAVE_RANDOM)
+  return rseed = (unsigned int) (labs(random()) & 32767);
+#else
   rseed = rseed * 1103515245 + 12345;
   return ((unsigned int)((rseed >> 16) & 32767));	/* was % 32768 */
+#endif
 }
 
 /* Set the random number generator seed to SEED. */
@@ -1099,8 +1104,12 @@
 sbrand (seed)
      unsigned long seed;
 {
+#if defined(HAVE_SRANDOM)
+  srandom(seed);
+#else
   rseed = seed;
   last_random_value = 0;
+#endif
 }
 
 static SHELL_VAR *
