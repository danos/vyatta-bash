#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# DP: include headers for including function prototypes

From: Doug Porter <dsp@debian.org>
Sender: dsp@waterspout.com
To: submit@bugs.debian.org
Subject: Bug#124004: bash: implicit declarations are bad
Date: Fri, 14 Dec 2001 12:20:27 -0500

Package: bash
Version: 2.05a-3
Severity: normal
Tags: patch

When functions do not have function prototypes the C compiler
assumes those functions return int.  Two functions are implicitly
declared when building bash:

| /build/buildd/bash-2.05a/support/bashversion.c:68: warning: implicit declaration of function `getopt'
| /build/buildd/bash-2.05a/lib/sh/tmpfile.c:131: warning: implicit declaration of function `time'

The function time(2) returns type time_t which may be a different
size than int on some platforms.  Following is a patch to correct
these problems:


diff -Naur bash-2.05a.orig/lib/sh/tmpfile.c bash-2.05a/lib/sh/tmpfile.c
--- bash-2.05a.orig/lib/sh/tmpfile.c	Tue Oct 30 19:03:47 2001
+++ bash-2.05a/lib/sh/tmpfile.c	Fri Dec 14 16:48:41 2001
@@ -24,6 +24,7 @@
 
 #include <bashtypes.h>
 #include <posixstat.h>
+#include <posixtime.h>
 #include <filecntl.h>
 
 #if defined (HAVE_UNISTD_H)
diff -Naur bash-2.05a.orig/support/bashversion.c bash-2.05a/support/bashversion.c
--- bash-2.05a.orig/support/bashversion.c	Mon Oct 15 13:46:42 2001
+++ bash-2.05a/support/bashversion.c	Fri Dec 14 16:49:18 2001
@@ -23,6 +23,7 @@
 #include "stdc.h"
 
 #include <stdio.h>
+#include <unistd.h>
 #include "bashansi.h"
 
 #include "version.h"


Thanks.

-- 
Doug Porter <dsp@waterspout.com>
