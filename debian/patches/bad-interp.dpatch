#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# DP: print out bad interpreter names with trailing ^M

--- bash/execute_cmd.c~	2005-01-22 23:14:33.000000000 +0100
+++ bash/execute_cmd.c	2005-01-23 20:16:58.000000000 +0100
@@ -3858,11 +3858,21 @@
 	  if (sample_len > 2 && sample[0] == '#' && sample[1] == '!')
 	    {
 	      char *interp;
+	      int interp_length;
+	      char *interp_printable = NULL;
 
 	      interp = getinterp (sample, sample_len, (int *)NULL);
+	      interp_length = strlen(interp);
+	      if (interp[interp_length-1] == '\r') {
+		interp_printable = (char *)xmalloc (interp_length + 2);
+		strncpy (interp_printable, interp, interp_length - 1);
+		strcpy (interp_printable + interp_length - 1, "^M");
+	      }
 	      errno = i;
-	      sys_error (_("%s: %s: bad interpreter"), command, interp ? interp : "");
+	      sys_error (_("%s: %s: bad interpreter"), command,
+			 interp_printable ? interp_printable : interp ? interp : "");
 	      FREE (interp);
+	      FREE (interp_printable);
 	      return (EX_NOEXEC);
 	    }
 #endif
