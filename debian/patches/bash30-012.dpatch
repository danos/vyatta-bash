#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p0 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p0 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# DP: upstream patch bash30-012

			     BASH PATCH REPORT
			     =================

Bash-Release: 3.0
Patch-ID: bash30-012

Bug-Reported-by: ben@ncipher.com
Bug-Reference-ID: <E1BxQYe-0002p1-00@berdoo.ncipher.com>
Bug-Reference-URL: http://lists.gnu.org/archive/html/bug-bash/2004-08/msg00215.html

Bug-Description:

When using the pipefail option, the following command:
  echo foo | false
produces an exit status of 0, ignoring the exit status of false.

Patch:

*** ../bash-3.0/jobs.c	Fri Apr 23 16:28:25 2004
--- jobs.c	Wed Aug 18 11:15:07 2004
***************
*** 1779,1784 ****
      {
        fail = 0;
!       for (p = jobs[job]->pipe; p->next != jobs[job]->pipe; p = p->next)
!         if (p->status != EXECUTION_SUCCESS) fail = p->status;
        return fail;
      }
--- 1779,1789 ----
      {
        fail = 0;
!       p = jobs[job]->pipe;
!       do
! 	{
! 	  if (p->status != EXECUTION_SUCCESS) fail = p->status;
! 	  p = p->next;
! 	}
!       while (p != jobs[job]->pipe);
        return fail;
      }

*** ../bash-3.0/patchlevel.h	Wed Aug 22 08:05:39 2001
--- patchlevel.h	Thu Sep  2 15:04:32 2004
***************
*** 26,30 ****
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 11
  
  #endif /* _PATCHLEVEL_H_ */
--- 26,30 ----
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 12
  
  #endif /* _PATCHLEVEL_H_ */
