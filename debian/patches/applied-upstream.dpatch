#! /bin/sh -e

echo "These patches are applied upstream!"
exit 0

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

--- bash-2.02.1.orig/lib/readline/rlconf.h
+++ bash-2.02.1/lib/readline/rlconf.h
@@ -56,8 +57,6 @@
 
 /* Define this if you want code that allows readline to be used in an
    X `callback' style. */
-#if !defined (SHELL)
 #  define READLINE_CALLBACKS
-#endif
 
 #endif /* _RLCONF_H_ */

--- bash-2.02.1.orig/bashhist.c
+++ bash-2.02.1/bashhist.c
@@ -289,7 +289,7 @@
       /* If the filename was supplied, then create it if necessary. */
       if (stat (filename, &buf) == -1 && errno == ENOENT)
 	{
-	  fd = open (filename, O_WRONLY|O_CREAT, 0666);
+	  fd = open (filename, O_WRONLY|O_CREAT, 0600);
 	  if (fd < 0)
 	    {
 	      builtin_error ("%s: cannot create: %s", filename, strerror (errno));
@@ -324,7 +324,7 @@
 	  if (stat (hf, &buf) == -1)
 	    {
 	      int file;
-	      file = open (hf, O_CREAT | O_TRUNC | O_WRONLY, 0666);
+	      file = open (hf, O_CREAT | O_TRUNC | O_WRONLY, 0600);
 	      if (file != -1)
 		close (file);
 	    }
