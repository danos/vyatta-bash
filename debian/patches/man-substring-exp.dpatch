#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# DP: Clarify documentation about substring expansion

--- bash/doc/bash.1~	2011-02-24 01:27:43.058229003 +0100
+++ bash/doc/bash.1	2011-02-24 01:29:50.578229161 +0100
@@ -2758,6 +2758,9 @@
 below).
 If \fIoffset\fP evaluates to a number less than zero, the value
 is used as an offset from the end of the value of \fIparameter\fP.
+Arithmetic expressions starting with a - must be separated by whitespace
+from the preceding : to be
+distinguished from the \fBUse Default Values\fP expansion.
 If \fIlength\fP evaluates to a number less than zero, and \fIparameter\fP
 is not \fB@\fP and not an indexed or associative array, it is interpreted
 as an offset from the end of the value of \fIparameter\fP rather than
