#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# DP: use tempnam function to generate names for temporary file.
# DP: 

--- ./builtins/fc.def.orig	Wed Feb 17 20:46:30 1999
+++ ./builtins/fc.def	Thu Nov 11 20:25:33 1999
@@ -161,7 +161,7 @@
   REPL *rlist, *rl;
   char *ename, *command, *newcom, *line;
   HIST_ENTRY **hlist;
-  char fn[64];
+  char *fn = 0;
 
   numbering = 1;
   reverse = listing = execute = 0;
@@ -326,15 +326,29 @@
     stream = stdout;
   else
     {
+      int fd;
       numbering = 0;
-      /* XXX - this is raceable */
-      sprintf (fn, "/tmp/bash%d", (int)time ((time_t *) 0) + (int)getpid ());
+      fn = tempnam(0, "bash");
+      if (!fn)
+	{
+	  builtin_error ("unable to generate a unique filename");
+	  return (EXECUTION_FAILURE);
+	}
+      
+      fd = open (fn, O_CREAT | O_EXCL | O_WRONLY, 0600);
+      if (fd < 0)
+	{
+	  builtin_error ("cannot open temp file %s", fn);
+	  free (fn);
+	  return (EXECUTION_FAILURE);
+	}
 
-      stream = fopen (fn, "w");
+      stream = fdopen (fd, "w");
 
       if (stream == 0)
 	{
 	  builtin_error ("cannot open temp file %s", fn);
+	  free (fn);
 	  return (EXECUTION_FAILURE);
 	}
     }
@@ -350,7 +364,10 @@
     }
 
   if (listing)
+    {
+    free (fn);
     return (EXECUTION_SUCCESS);
+    }
 
   fclose (stream);
 
@@ -369,6 +386,10 @@
   if (retval != EXECUTION_SUCCESS)
     {
       unlink (fn);
+      free (fn);
+#ifdef DEBFIX
+      free (command);
+#endif
       return (EXECUTION_FAILURE);
     }
 
@@ -389,6 +410,10 @@
 
   run_unwind_frame ("fc builtin");
 
+  free (fn);
+#ifdef DEBFIX
+  free (command);
+#endif
   return (retval);
 }
 
--- bash-2.02.1.orig/support/bashbug.sh
+++ bash-2.02.1/support/bashbug.sh
@@ -21,7 +21,7 @@
 PATH=/bin:/usr/bin:/usr/local/bin:$PATH
 export PATH
 
-TEMP=/tmp/bbug.$$
+TEMP=$(tempfile --prefix bbug --mode 600) || exit 1
 
 # Figure out how to echo a string without a trailing newline
 N=`echo 'hi there\c'`

--- bash-2.02.1.orig/subst.c
+++ bash-2.02.1/subst.c
@@ -2749,8 +2749,8 @@
 {
   char *tname;
 
-  tname = mktemp (savestring ("/tmp/sh-np-XXXXXX"));
-  if (mkfifo (tname, 0600) < 0)
+  tname = tempnam(0, "sh-np");
+  if (!tname || mkfifo (tname, 0600) < 0)
     {
       free (tname);
       return ((char *)NULL);

# DP: From: Topi Miettinen <Topi.Miettinen@medialab.sonera.fi>
# DP: Subject: bash doesn't use $TMPDIR [PATCH]
# DP: Date: Tue, 13 Apr 1999 00:10:16 +0300
# DP: 
# DP: $ ls -ld /tmp
# DP: ls: /tmp: No such file or directory
# DP: $ bash -c 'echo  <<EOF'
# DP: bash: cannot create temp file for here document: No such file or directory
# DP: $ ./bash -c 'echo  <<EOF'
# DP: 
# DP: Also avoid the race mentioned in comments by postponing file close.

diff -ru ./redir.c.orig ./redir.c
--- ./redir.c.orig      Thu Jan 29 22:09:17 1998
+++ ./redir.c   Mon Apr 12 22:50:25 1999
@@ -292,21 +292,21 @@
 here_document_to_fd (redirectee)
      WORD_DESC *redirectee;
 {
-  char filename[24];
-  int r, fd;
+  char *filename, *tempdir;
+  int r, fd, fd2;
   static int fnum = 0;

-  do
-    {
-      /* Make the filename for the temp file. */
-      sprintf (filename, "/tmp/t%d-%d-sh", (int)getpid (), fnum++);
-
-      /* Make sure we open it exclusively. */
-      fd = open (filename, O_TRUNC | O_WRONLY | O_CREAT | O_EXCL, 0600);
-    }
-  while (fd < 0 && errno == EEXIST);
-
-  /* If we failed for some reason other than the file existing, abort */
+  tempdir = getenv ("TMPDIR");
+  if (!tempdir)
+    tempdir = "/tmp";
+
+  filename = alloca (strlen (tempdir) + 9);  /* /t.XXXXXX */
+  if (!filename)
+    return -1;
+
+  strcpy (filename, tempdir);
+  strcat (filename, "/t.XXXXXX");
+  fd = mkstemp (filename);
   if (fd < 0)
     return (fd);

@@ -315,35 +315,37 @@
   if (redirectee->word)
     r = write_here_document (fd, redirectee);

-  close (fd);
   if (r)
     {
+      close (fd);
       unlink (filename);
       errno = r;
       return (-1);
     }

-  /* XXX - this is raceable */
+  /* To avoid races we close the first fd after opening the second. */
   /* Make the document really temporary.  Also make it the input. */
-  fd = open (filename, O_RDONLY, 0600);
+  fd2 = open (filename, O_RDONLY, 0600);

-  if (fd < 0)
+  if (fd2 < 0)
     {
       r = errno;
       unlink (filename);
+      close(fd);
       errno = r;
       return -1;
     }

+  close (fd);
   if (unlink (filename) < 0)
     {
       r = errno;
-      close (fd);
+      close (fd2);
       errno = r;
       return (-1);
     }

-  return (fd);
+  return (fd2);
 }

 /* Open FILENAME with FLAGS in noclobber mode, hopefully avoiding most

